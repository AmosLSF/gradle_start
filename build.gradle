group 'amos.learn'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

//configuration area
ext.versionFile = file('version.properties')
//配置任务没有左移操作符
task loadVersion {
    project.version = readVersion()
}

task makeReleaseVersion(type: ReleaseVersionTask) {
    //设定任务属性
    release = version.release
    destFile = versionFile
}

//compileJava.dependsOn('makeReleaseVersion')

jar {
    manifest {
        attributes 'Main-Class': 'HelloWorld'
    }
}

//function arean
ProjectVersion readVersion() {
    logger.quiet 'Reading the version file.'
    //如果文件不存在抛出异常
    if (!versionFile.exists()) {
        throw new GradleException("Required version file does not exist:$versionFile.canonicalPath")
    }

    Properties versionProps = new Properties()

//groovy的file实现了添加方法通过新创建的流来读取

    versionFile.withInputStream { stream ->
        versionProps.load(stream)
    }
//在Groovy中如果这是最后一个语句你可以省略return关键字
    new ProjectVersion(versionProps.major.toInteger(),
            versionProps.minor.toInteger(), versionProps.release.toBoolean())
}

//model area
class ProjectVersion {
    Integer major
    Integer minor
    Boolean release

    ProjectVersion(Integer major, Integer minor) {
        this.major = major
        this.minor = minor
        this.release = Boolean.FALSE
    }

    ProjectVersion(Integer major, Integer minor, Boolean release) {
        this(major, minor)
        this.release = release
    }

    @Override
    String toString() {
        //只有release为false的时候才添加后缀SNAPSHOT
        "$major.$minor${release ? '' : '-SNAPSHOT'}"
    }
}
